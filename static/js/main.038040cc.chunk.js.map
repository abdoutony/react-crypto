{"version":3,"sources":["utils/Pagination.js","routes/Main.js","routes/Currency.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","className","map","number","href","onClick","Main","useState","cryptoList","setCryptoList","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","useEffect","axios","get","then","response","data","console","log","history","useHistory","style","paddingLeft","coin","width","marginLeft","marginRight","id","name","value","price_usd","displayType","thousandSeparator","prefix","marginBottom","length","pageNumber","Currency","useParams","symbol","nameid","rank","percent_change_24h","percent_change_1h","percent_change_7d","price_btc","market_cap_usd","volume24","volume24a","csupply","tsupply","msupply","setCoin","cursor","paddingBottom","class","App","path","exact","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.038040cc.chunk.js","sourcesContent":["import React from 'react'\r\nexport const   Pagination =({postsPerPage,totalPosts,paginate}) => {\r\n    const pageNumbers = [];\r\n    for(let i =1; i< Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n            <nav aria-label=\"Page navigation\">\r\n              <ul className=\"pagination justify-content-center\">        \r\n                {\r\n                pageNumbers.map((number)=>(\r\n\r\n                    <li className=\"page-item\"   key={number}>\r\n                        <a className=\"page-link\" href=\"#\"  \r\n                        onClick={()=>{paginate(number)}}>{number}</a>\r\n                    </li>\r\n                ))\r\n                }\r\n              </ul>\r\n            </nav> \r\n    )\r\n}","import React ,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format'\r\nimport {Pagination} from '../utils/Pagination';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Main() {\r\n    const [cryptoList,setCryptoList]= useState([]);\r\n\r\n      \r\n\r\n       // DECLARING THE STATES NEEDED FOR THE PAGINATION\r\n        const [currentPage,setCurrentPage] = useState(1);\r\n        const [postsPerPage,setPostsPerPage] = useState(12);\r\n        const indexOfLastPost = currentPage * postsPerPage;\r\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n        const currentPosts = cryptoList.slice(indexOfFirstPost,indexOfLastPost);\r\n\r\n        const paginate = (pageNumber)=>{\r\n              setCurrentPage(pageNumber)\r\n        }\r\n\r\n    useEffect(()=>{\r\n        //getting the data\r\n        axios.get('https://api.coinlore.net/api/tickers/')\r\n        .then((response)=>{\r\n            setCryptoList(response.data['data'])\r\n            console.log(response.data['data'])\r\n        })\r\n    },[])\r\n\r\n    let history = useHistory();\r\n    return (\r\n        <div className=\"Header container\">\r\n            <div className=\"col-md-12\">\r\n               <div className=\"row d--f jc--c\">\r\n                  <h1 className=\"text-center text-white mt-4\">Welcome to Cryptocurrency Website</h1>\r\n               </div>\r\n               <div className=\"row\" style={{paddingLeft:\"35px\"}}>\r\n                   <div className=\"ctyptoList row d--f\">\r\n                       {\r\n                           // displaying the data\r\n                           currentPosts.map((coin)=>{\r\n                               return (\r\n                                   <div className=\"card col-md-4 mt-4\"\r\n                                   style={{width:\"20rem\",marginLeft:\"15px\",marginRight:\"15px\"}}\r\n                                   onClick={()=>history.push(`/currency/${coin.id}`)}>\r\n                                        \r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{coin.name}</h5>\r\n                                            <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                                             \r\n                                             <NumberFormat  value={coin.price_usd} displayType={'text'} \r\n                                             thousandSeparator={true} prefix={'$'}/>   \r\n                                            </h6>\r\n                                        </div>\r\n                                   </div>\r\n                               );\r\n                           })\r\n                       }\r\n                         <div className=\"mt-4\" style={{marginBottom:\"25px\"}}></div> \r\n                       <Pagination postsPerPage ={postsPerPage} totalPosts = {cryptoList.length} \r\n                        paginate ={paginate} />\r\n                   </div>\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default function Currency() {\r\n    let {id} =useParams();\r\n    let history = useHistory();\r\n\r\n    const [coin,setCoin] = useState({\r\n        id:\"\",\r\n        symbol:\"\",\r\n        name:\"\",\r\n        nameid:\"\",\r\n        rank:0,\r\n        price_usd:\"\",\r\n        percent_change_24h:\"\",\r\n        percent_change_1h:\"\",\r\n        percent_change_7d:\"\",\r\n        price_btc:\"\",\r\n        market_cap_usd:\"\",\r\n        volume24:0,\r\n        volume24a:0,\r\n        csupply:\"\",\r\n        tsupply:\"\",\r\n        msupply:\"\"\r\n    });\r\n\r\n    useEffect(()=>{\r\n        axios.get(`https://api.coinlore.net/api/ticker/?id=${id}`)\r\n        .then((coin)=>{\r\n            setCoin({\r\n                id:coin.data[0].id,\r\n                symbol:coin.data[0].symbol,\r\n                name:coin.data[0].name,\r\n                nameid:coin.data[0].nameid,\r\n                rank:coin.data[0].rank,\r\n                price_usd:coin.data[0].price_usd,\r\n                percent_change_24h:coin.data[0].percent_change_24h,\r\n                percent_change_1h:coin.data[0].percent_change_1h,\r\n                percent_change_7d:coin.data[0].percent_change_7d,\r\n                price_btc:coin.data[0].price_btc,\r\n                market_cap_usd:coin.data[0].market_cap_usd,\r\n                volume24:coin.data[0].volume24,\r\n                volume24a:coin.data[0].volume24a,\r\n                csupply:coin.data[0].csupply,\r\n                tsupply:coin.data[0].tsupply,\r\n                msupply:coin.data[0].msupply\r\n            })\r\n            console.log(coin)\r\n        })\r\n    },[])\r\n    return (\r\n        <div className=\"header container\">\r\n            <div className=\"text-center\">\r\n                <a className=\"text-white\"\r\n                style={{cursor:'pointer'}}\r\n                onClick={()=> history.push('/')}\r\n                >Home page</a>\r\n            </div>\r\n\r\n            <div className=\"row d--f jc--c\">\r\n               <h1 className=\"text-center text-white\">Details of  the Cryptocurrency : {coin.name} </h1>\r\n            </div>\r\n            <div className=\"row d--f jc--c\" style={{paddingBottom:'50px'}}>\r\n               <div className=\"card col-md-5 mt-4\" style={{paddingBottom:'50px'}}>\r\n                    <div className=\"card-body\">\r\n                           <h5 class=\"card-title\">\r\n                                  <b>Symbol : </b>\r\n                                  <span className=\"text-muted\">{coin.symbol}</span>\r\n                               </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Name : </b>\r\n                                  <span className=\"text-muted\">{coin.name}</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>NameID : </b>\r\n                                  <span className=\"text-muted\">{coin.nameid}</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Rank : </b>\r\n                                  <span className=\"text-muted\">{coin.rank}</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Price Usd : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.price_usd} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Percent Change_24h : </b>\r\n                                   <span className=\"text-muted\">{coin.percent_change_24h} %</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Percent Change_1h : </b>\r\n                                  <span className=\"text-muted\">{coin.percent_change_1h} %</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Percent Change_7d : </b> \r\n                                  <span className=\"text-muted\">{coin.percent_change_7d} %</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Price Btc : </b> \r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.price_btc} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Market Cap Usd : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.market_cap_usd} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                    B\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Volume24 : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.volume24} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Volume24a : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.volume24a} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Csupply : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.csupply} displayType={'text'} thousandSeparator={true}/>\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Tsupply : </b> \r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.tsupply} displayType={'text'} thousandSeparator={true}/>\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Msupply : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.msupply} displayType={'text'} thousandSeparator={true}/>\r\n                                </span>\r\n                              </h5>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './FlexBox.css';\n\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport Main from './routes/Main';\nimport Currency from './routes/Currency';\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n           <Route path='/' exact render={(props)=><Main />} />\n           <Route path='/currency/:id' render= {(props)=> <Currency />} />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}